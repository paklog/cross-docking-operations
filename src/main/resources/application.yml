spring:
  application:
    name: cross-docking-operations
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/crossdock}
      auto-index-creation: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.cloudevents.kafka.CloudEventSerializer

server:
  port: ${SERVER_PORT:8095}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

springwolf:
  enabled: true
  docket:
    info:
      title: Cross-Docking Operations Event API
      version: 1.0.0
      description: |
        Event-driven API for cross-docking operations.
        All events follow CloudEvents v1.0 specification and are published to Kafka.
      contact:
        name: Paklog Platform Team
        email: platform@paklog.com
      license:
        name: Proprietary
        url: https://paklog.com/license
    servers:
      kafka-dev:
        protocol: kafka
        host: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  use-fqn: false
  scanner:
    async-listener:
      enabled: true
  plugin:
    kafka:
      publishing:
        enabled: true

crossdock:
  events:
    topic: transportation-logistics.cross-docking.events
  optimization:
    enabled: true
    algorithm: greedy
  timing:
    max-dwell-minutes: 120

logging:
  level:
    root: INFO
    com.paklog.crossdocking: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      uri: mongodb://mongodb:27017/crossdock
  kafka:
    bootstrap-servers: kafka:9092
